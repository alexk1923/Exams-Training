[
	{
		"quest": "Ce tipuri de erori poate introduce un generator?",
		"choices": [
			{ "str": "erori bizantine" },
			{ "str": "erori de generare", "isCorrect": true },
			{ "str": "erori de sintaxa" },
			{ "str": "erori matematice" }
		]
	},
	{
		"quest": "Care din variantele de mai jos NU este o solutie de a elimina efectele intretaierii intereselor?",
		"choices": [
			{ "str": "pattern-ul Template" },
			{ "str": "incalcirea codului", "isCorrect": true },
			{ "str": "AOP" },
			{ "str": "pattern-ul Visitor" }
		]
	},
	{
		"quest": "Care dintre urmatoarele tehnologiii este eficienta si scalabila pentru a intoarce raspunsul pentru client intr-un serviciu REST?",
		"choices": [
			{ "str": "JSON", "isCorrect": true },
			{ "str": "TEXT" },
			{ "str": "HTTP" },
			{ "str": "XML" }
		]
	},
	{
		"quest": "Ascunderea informatiei se poate face prin restrictionarea scopului. Care este cel mai mic scop dintre cele enuntate mai jos?",
		"choices": [
			{ "str": "toate variantele de raspuns au acelasi scop" },
			{
				"str": "scopul variabilelor locale unui bloc de instructiuni",
				"isCorrect": true
			},
			{ "str": "scopul variabilelor locale unei metode" },
			{ "str": "scopul variabilelor tip instanta" }
		]
	},

	{
		"quest": "Care din variantele de mai jos NU este o faza a abordarii orientate aspect?",
		"choices": [
			{ "str": "recompunere" },
			{ "str": "descompunere" },
			{ "str": "implementare" },
			{ "str": "parsare", "isCorrect": true }
		]
	},
	{
		"quest": "Un prototip poate fi folosit:",
		"choices": [
			{
				"str": "in procesul de inginerie a cerintelor, procesul de proiectare si procesul de testare",
				"isCorrect": true
			},
			{ "str": "in procesul de proiectare" },
			{ "str": "in procesul de inginerie a cerintelor" },
			{
				"str": "in procesul de inginerie a cerintelor si procesul de proiectare"
			}
		]
	},
	{
		"quest": "Cu ce difera pattern-ul Factory Method fata de Factory?   ",
		"choices": [
			{
				"str": "Factory Method nu permite subclaselor sa specifice ce clase pot instantia"
			},
			{ "str": "nu difera cu nimic" },
			{
				"str": "Factory method nu defineste interfete pentru crearea de obiecte"
			},
			{
				"str": "permite unei clase delegarea instantierii catre subclase",
				"isCorrect": true
			}
		]
	},

	{
		"quest": "Care din urmatoarele componente de autentificare ruleaza in TEE (Trusted Execution Environment) OS?",
		"choices": [
			{ "str": "toate variantele", "isCorrect": true },
			{ "str": "fingerprint" },
			{ "str": "gatekeeper" },
			{ "str": "Keymaster" }
		]
	},
	{
		"quest": "Ce putem folosi in Spring pentru a trimite date de dimensiuni mari (ordinul GB)?",
		"choices": [
			{ "str": "path variable annotations" },
			{ "str": "multi-part data", "isCorrect": true },
			{ "str": "un controller" },
			{ "str": "request parameter annotations" }
		]
	},
	{
		"quest": "Daca avem o clas MyClass, cum specificam un pointcut pentru toate metodele non-publice statice de tip void din aceasta clasa, al caror nume incepe cu 'set' si care pot primi oricati parametri de orice tip?",
		"choices": [
			{
				"str": "pointcut myPointcut() : call(!public static void MyClass.set*(..));",
				"isCorrect": true
			},
			{
				"str": "pointcut myPointcut() : call(!public static void MyClass.set(..));"
			},
			{ "str": "pointcut myPointcut() : call(* *.set*(..));" },
			{ "str": "pointcut myPointcut() : call(* *.set*(..));" }
		]
	},
	{
		"quest": "De ce se ocupa tiparele structurale?",
		"choices": [
			{
				"str": "relatiile dintre entitati, facand posibil lucrul impreuna al acestor entitati mai usor",
				"isCorrect": true
			},
			{ "str": "comunicarea dintre entitati" },
			{
				"str": "instantiere, devenind astfel mai usoara crearea obiectelor intr-o maniera profitabila pentru situatia curenta"
			},
			{ "str": "structuri de date si cod" }
		]
	},
	{
		"quest": "Cum se numeste pattern-ul in care toate obiectele care depind de un alt obiect sunt notificate cand acesta isi schimba starea?",
		"choices": [
			{
				"str": "Facade"
			},
			{ "str": "Observer", "isCorrect": true },
			{
				"str": "Adapter"
			},
			{ "str": "Decorator" }
		]
	},
	{
		"quest": "In SCRUM, cum se numesc membrii echipei SCRUM?",
		"choices": [
			{
				"str": "cows"
			},
			{ "str": "pigs", "isCorrect": true },
			{
				"str": "ducks"
			},
			{ "str": "chickens" }
		]
	},
	{
		"quest": "Ce reprezinta un “smell”?",
		"choices": [
			{
				"str": "o problema comuna de proiectare",
				"isCorrect": true
			},
			{ "str": "un sistem nemodular" },
			{
				"str": "o solutie pentru o problema comuna de proiectare"
			},
			{ "str": "o eroare de executie" }
		]
	},
	{
		"quest": "Care din variantele de mai jos este definitia unui proces software?",
		"choices": [
			{
				"str": "set structurat de activitati de proiectare a componentelor unui sistem"
			},
			{ "str": "verificarea functionalitatii corecte a aplicatiei software" },
			{
				"str": "etapa de dezvoltare in care sunt specificate cerintele programului"
			},
			{
				"str": "set structurat de activitati necesare pentru dezvoltarea unui sistem software",
				"isCorrect": true
			}
		]
	},
	{
		"quest": "Mentionati valoarea de adevar a celor doua afirmatii: 1) aspectele din AspectJ sunt similare claselor Java pentru ca pot fi abstracte sau concrete; 2) aspectele din AspectJ difera de clasele Java pentru ca aspectele nu au constructori sau destructori.",
		"choices": [
			{
				"str": "adevarat / adevarat",
				"isCorrect": true
			},
			{ "str": "fals / fals" },
			{
				"str": "fals / adevarat"
			},
			{ "str": "adevarat / fals" }
		]
	},
	{
		"quest": "Care dintre urmatoarele metode HTTP este idempotenta?",
		"choices": [
			{
				"str": "DELETE"
			},
			{ "str": "GET", "isCorrect": true },
			{
				"str": "POST"
			},
			{ "str": "PUT" }
		]
	},
	{
		"quest": "Ce probleme pot apare intr-o companie IT care adopta modelul dezvoltarii incrementale?",
		"choices": [
			{
				"str": "probleme generale de dezvoltare a proiectului"
			},
			{ "str": "probleme de personal si dezvoltare" },
			{
				"str": "probleme contractuale si de mentenanta",
				"isCorrect": true
			},
			{ "str": "probleme de gestiune a furnizorilor si produselor" }
		]
	},
	{
		"quest": "Ce este CTS in Android?",
		"choices": [
			{
				"str": "document de compatibilitate"
			},
			{ "str": "suita de teste de securitate" },
			{
				"str": "suita de teste care testeaza API-uri si functii ce nu pot fi testate pe un dispozitiv static fara input manual"
			},
			{
				"str": "suita de teste ce reprezinta mecanismul de compatibilitate",
				"isCorrect": true
			}
		]
	},
	{
		"quest": "Care din variantele de mai jos NU este una din cele 5 valori ale extreme programming?",
		"choices": [
			{
				"str": "comunicare"
			},
			{ "str": "atentie", "isCorrect": true },
			{
				"str": "feedback"
			},
			{ "str": "respect" }
		]
	},
	{
		"quest": "Care din urmatoarele NU este un tip de serviciu in Android?",
		"choices": [
			{
				"str": "background"
			},
			{ "str": "foreground" },
			{
				"str": "bound"
			},
			{ "str": "Ephemeral", "isCorrect": true }
		]
	},
	{
		"quest": "In cadrul reflectiei, care este diferenta dintre introspectie si interventie?",
		"choices": [
			{
				"str": "nu exista nicio diferenta"
			},
			{
				"str": "la introspectie, doar se analizeaza corpurile metodelor si instructiunile, pe cand la interventie se si pot modifica",
				"isCorrect": true
			},
			{
				"str": "la interventie, doar se analizeaza corpurile metodelor si instructiunile, pe cand la introspectie se sipot modifica"
			},
			{
				"str": "introspectia introduce un grad de pericol, pe cand interventia este sigura"
			}
		]
	},
	{
		"quest": "Care dintre urmatoarele NU reprezinta o categorie de design pattern?",
		"choices": [
			{
				"str": "comportamentale"
			},
			{ "str": "specifice", "isCorrect": true },
			{
				"str": "creationale"
			},
			{ "str": "structurale" }
		]
	},

	{
		"quest": "Ce tip de introspectie din lista de mai jos NU ofera Java?",
		"choices": [
			{ "str": "introspectia interpretorului", "isCorrect": true },
			{ "str": "introspectia semnaturilor de metode" },
			{ "str": "introspectia tipurilor" },
			{ "str": "introspectia accesului la tipuri si metode" }
		]
	},
	{
		"quest": "La ce pattern gasim notiunea de double check locking?",
		"choices": [
			{ "str": "Template" },
			{ "str": "Builder" },
			{ "str": "Singleton", "isCorrect": true },
			{ "str": "Adapter" }
		]
	},
	{
		"quest": "Care din problemele mentionate mai jos pot fi rezolvate folosind generatoare?",
		"choices": [
			{ "str": "generarea de cod algoritmic customizat" },
			{ "str": "toate variantele", "isCorrect": true },
			{ "str": "generarea de extensii" },
			{ "str": "evaluarea partiala a codului programului" }
		]
	},
	{
		"quest": "OAuth 2.0 este un protocol pentru:",
		"choices": [
			{ "str": "Confidentialitate" },
			{ "str": "integritate" },
			{ "str": "autorizare", "isCorrect": true },
			{ "str": "autentificare" }
		]
	},
	{
		"quest": "Care este ordinea corecta a etapelor standard ale unui proces software?",
		"choices": [
			{ "str": "proiectare, analiza, testare, implementare" },
			{ "str": "proiectare, analiza, implementare, testare" },
			{ "str": "analiza, proiectare, testare, implementare" },
			{ "str": "analiza, proiectare, implementare, testare", "isCorrect": true }
		]
	},
	{
		"quest": "Un design pattern de tip Proxy furnizeaza un surogat sau inlocuitor pentru un alt obiect pentru a controla modul de acces la respectivul obiect?",
		"choices": [{ "str": "Adevarat", "isCorrect": true }, { "str": "Fals" }]
	},
	{
		"quest": "Ce clasa/clase extinde Java Servlet?",
		"choices": [
			{ "str": "HttpServletRequest" },
			{ "str": "GenericServlet sau HttpServlet", "isCorrect": true },
			{ "str": "HttpServletResponse" },
			{ "str": "GenericServlet" }
		]
	},
	{
		"quest": "Cum se numeste in general metoda dintr-o interfata de tip Command?",
		"choices": [
			{ "str": "do()" },
			{ "str": "make()" },
			{ "str": "run()" },
			{ "str": "execute()", "isCorrect": true }
		]
	},
	{
		"quest": "Framework-ul Spring ofera support pentru:",
		"choices": [
			{ "str": "stocare date" },
			{ "str": "toate variantele sunt corecte", "isCorrect": true },
			{ "str": "securitate" },
			{ "str": "dependency injection" }
		]
	},
	{
		"quest": "Ce design pattern furnizeaza o cale de acces la elementele unui set intr-o maniera secventiala?",
		"choices": [
			{ "str": "Proxy Pattern" },
			{ "str": "Bridge Pattern" },
			{ "str": "Iterator Pattern", "isCorrect": true },
			{ "str": "Facade Pattern" }
		]
	},
	{
		"quest": "Ne planificam o calatorie in strainatate. Primul lucru pe care trebui sa il facem este sa ajungem la aeroport. Avem mai multe variante: tren, autobuz, taxi. Rezolvati problema alegerii mijlocului de transport catre aeroport apeland la un design pattern corespunzator.",
		"choices": [
			{ "str": "Strategy", "isCorrect": true },
			{ "str": "Facade" },
			{ "str": "Adapter" },
			{ "str": "Visitor" }
		]
	},
	{
		"quest": "Care din urmatoarele este un dezavantaj al Google App Engine?",
		"choices": [
			{ "str": "unique scaling model", "isCorrect": true },
			{ "str": "ofera suport de baze de date" },
			{ "str": "all-in-one" },
			{ "str": "auto-scalare" }
		]
	},
	{
		"quest": "Care dintre urmatoarele afirmatii legate de un generator este adevarata?",
		"choices": [
			{
				"str": "generarea de cod poate face dezvoltarea mai eficienta, de exemplu prin adaptabilitate si refolosire"
			},
			{
				"str": "generatoarele introduc noi surse de erori de executie: erori de generare"
			},
			{ "str": "toate afirmatiile sunt adevarate", "isCorrect": true },
			{ "str": "siguranta generatoarelor nu este garantata" }
		]
	},
	{
		"quest": "In cadrul programarii orientate pe aspecte, ce este un joinpoint?",
		"choices": [
			{ "str": "niciuna din celelalte variante" },
			{
				"str": "o locatie bine definita in codul primar, pe baza de evenimente, unde un concern va intretaia aplicatia",
				"isCorrect": true
			},
			{
				"str": "constructie sintactica ce specifica un punct de legatura si expune contextul acestuia"
			},
			{
				"str": "secventa de cod ce trebuie executata la un moment dat de un pointcut"
			}
		]
	},
	{
		"quest": "Cum se numeste proprietatea prin care o aplicatie cloud poate sa tina un numar foarte mare de utilizatori conectati?",
		"choices": [
			{ "str": "disponiibilitate" },
			{ "str": "fiabilitate" },
			{ "str": "portabilitate" },
			{ "str": "scalabilitate", "isCorrect": true }
		]
	},
	{
		"quest": "Care din variantele de mai jos NU reprezinta un scop al generarii de cod?",
		"choices": [
			{ "str": "castig de performanta la runtime" },
			{
				"str": "evitarea erorilor de dezvoltare prin reducerea implicarii umane"
			},
			{ "str": "dezvoltare mai eficienta" },
			{ "str": "adaugarea de cod in caz ca este necesar", "isCorrect": true }
		]
	},
	{
		"quest": "Cum se numeste componenta vizuala Android care reprezinta o fereastra a unei aplicatii?",
		"choices": [
			{ "str": "Activity", "isCorrect": true },
			{ "str": "Intent" },
			{ "str": "ContentProvider" },
			{ "str": "Service" }
		]
	},
	{
		"quest": "Ce este SafetyNet in Android?",
		"choices": [
			{
				"str": "aplicatie Web si Android folosita la localizarea unui dispozitiv pierdut sau furat"
			},
			{
				"str": "serviciu care alerteaza si blocheaza automat instalarea aplicatiilor malitioase"
			},
			{ "str": "mesagerie de tip C2DM" },
			{ "str": "sistem de detectie a intruziunilor", "isCorrect": true }
		]
	},
	{
		"quest": "De unde stie containerul Web catre ce Servlet sa ruteze cererea HTTP?",
		"choices": [
			{ "str": "foloseste fisierul application.xml" },
			{ "str": "foloseste fisierul security.xml" },
			{ "str": "foloseste fisierul web.xml", "isCorrect": true },
			{ "str": "containerul Web nu stie sa faca o asemenea operatie" }
		]
	},
	{
		"quest": "In AspectJ, cum se numeste constructia sintactica ce specifica un punct de legatura si expune contextul acestuia?",
		"choices": [
			{ "str": "aspect" },
			{ "str": "pointcut", "isCorrect": true },
			{ "str": "advice" },
			{ "str": "jointpoint" }
		]
	},
	{
		"quest": "Aplicatia la care lucrati contine un meniu grafic cu mai multe text areas. In functie de cerinte, zonele cu text areas vor fi imbogatite cu mai multe informatii. Rezolvati problema folosind un design pattern corespunzator astfel incat zonele cu text areas sa fie usor extensibile, dar, odata implementate, sa nu mai permita schimbarea lor pe viitor.",
		"choices": [
			{ "str": "Factory" },
			{ "str": "Singleton" },
			{ "str": "Strategy" },
			{ "str": "Decorator", "isCorrect": true }
		]
	},
	{
		"quest": "Ce design pattern ajuta la translatarea unei interfete intr-o alta interfata prin wrapping?",
		"choices": [
			{ "str": "Strategy Pattern" },
			{ "str": "Proxy Pattern" },
			{ "str": "Adapter Pattern", "isCorrect": true },
			{ "str": "Facade Pattern" }
		]
	},
	{
		"quest": "Cum sunt cele doua afirmatii de mai jos? 1) Metoda getDeclaredMethods() returneaza inclusiv metodele mostenite ale unei clase 2) Metoda getDeclaredMethods() returneaza inclusiv metodele private sau statice ale unei clase",
		"choices": [
			{ "str": "1 - falsa, 2 - adevarata", "isCorrect": true },
			{ "str": "1 - adevarata, 2 = falsa" },
			{ "str": "1 - falsa, 2 - falsa" },
			{ "str": "1 - adevarata, 2 - adevarata" }
		]
	},
	{
		"quest": "Cum se numeste versiunea 8 de Android?",
		"choices": [
			{ "str": "Oreo", "isCorrect": true },
			{ "str": "Nougat" },
			{ "str": "Marshmallow" },
			{ "str": "Pie" }
		]
	},
	{
		"quest": "In cadrul programarii orientate pe aspecte, care este definitia codului imprastiat?",
		"choices": [
			{ "str": "programatorul nu indenteaza corect codul" },
			{
				"str": "folosirea unei singure metode sau clase pentru implementarea a numeroase concern-uri"
			},
			{
				"str": "codul necesar unui concern este raspandit in mai multe clase si metode, necesare pentru indeplinirea altor concernuri",
				"isCorrect": true
			},
			{
				"str": "situatia cand o cerinta a sistemului este indeplinita prin plasarea de cod in diferite clase, dar acest cod nu tine de functionalitatea specifica conceptelor modelate de respectivele clase"
			}
		]
	},
	{
		"quest": "Care este ordinea corecta a apelarii functiilor callback atunci cand inchidem o aplicatie Android?",
		"choices": [
			{ "str": "onStop(), onDestroy(), onPause()" },
			{ "str": "onStop(), onPause(), onDestroy()" },
			{ "str": "onPause(), onStop(), onDestroy()", "isCorrect": true },
			{ "str": "onPause(), onDestroy(), onStop()" }
		]
	},
	{
		"quest": "Care ar putea fi potentiale scenarii de utilizare ale aspectelor?",
		"choices": [
			{ "str": "dezvoltarea integrala a unui proiect" },
			{ "str": "dezvoltarea partii de logica principala a proiectului" },
			{
				"str": "dezvoltarea unor componente auxiliare, cum ar fi partea de logging, securitate",
				"isCorrect": true
			},
			{ "str": "niciunul din scenariile propuse" }
		]
	},
	{
		"quest": "Care sunt cele doua modalitati de reflectie?",
		"choices": [
			{ "str": "interventionala si comportamentala" },
			{ "str": "introspectiva si interventionala" },
			{ "str": "structurala si introspectiva" },
			{ "str": "structurala si comportamentala", "isCorrect": true }
		]
	},
	{
		"quest": "Care din variantele de mai jos NU este un avantaj al OAuth 2.0?",
		"choices": [
			{ "str": "control fin asupra resurselor utilizator asociate unui cont" },
			{ "str": "token-urile au o durata de viata limitata", "isCorrect": true },
			{ "str": "modificare parola fara revocarea accesului aplicatiilor" },
			{ "str": "nu necesita user/pass sa fie trimise catre aplicatie" }
		]
	},
	{
		"quest": "Cum sunt cele doua afirmatii de mai jos? 1) Compilatorul este un exemplu de generator 2) JavaDoc este un exemplu de generator?",
		"choices": [
			{ "str": "1 - adevarata, 2 - adevarata", "isCorrect": true },
			{ "str": "1 - adevarata, 2-  falsa" },
			{ "str": "1 - falsa, 2 - adevarata" },
			{ "str": "1 - falsa, 2 - falsa" }
		]
	},

	{
		"quest": "La ce se refera Application Sandbox in Android?",
		"choices": [
			{
				"str": "izolarea aplicatiilor pe baza UID-urilor, folosind elemente specifice nucleului Linux precum SELinux",
				"isCorrect": true
			},
			{ "str": "criptarea fisierelor importante" },
			{ "str": "protejarea sistemului de fisiere cu parola" },
			{ "str": "sistem de criptografie" }
		]
	},
	{
		"quest": "Ce permisiune este necesara in Android pentru a accesa pozitia de la GPS?",
		"choices": [
			{ "str": "READ_EXTERNAL_STORAGE" },
			{ "str": "ACCESS_FINE_LOCATION", "isCorrect": true },
			{ "str": "ACCESS_BACKGROUND_LOCATION" },
			{ "str": "SEND_SMS" }
		]
	},
	{
		"quest": "In cadrul unei aplicatii web, serverul de aplicatie trebuie sa fie instantiat o singura data, iar apoi instanta folosita acolo unde necesar. Rezolvati problema apeland la un design pattern corespunzator.",
		"choices": [
			{ "str": "Singleton", "isCorrect": true },
			{ "str": "Facade" },
			{ "str": "Abstract Factory" },
			{ "str": "Builder" }
		]
	},
	{
		"quest": "Care sunt operatiile specifice atunci cand este aplicata reflectia?",
		"choices": [
			{ "str": "introspectia, interventia, separation of concerns" },
			{ "str": "introspectia, interventia, modularizarea" },
			{ "str": "introspectia" },
			{ "str": "introspectia si interventia", "isCorrect": true }
		]
	},
	{
		"quest": "Care dintre urmatoarele componente ale requestului HTTP implica continut de mesaj sau reprezentare de resursa?",
		"choices": [
			{ "str": "Request Body", "isCorrect": true },
			{ "str": "Request Header" },
			{ "str": "HTTP Version" },
			{ "str": "URI" }
		]
	},
	{
		"quest": "OAuth 2.0 are urmatoarele capabilitati:",
		"choices": [
			{ "str": "toate afirmatiile celelalte sunt false" },
			{
				"str": "control fin asupra resurselor utilizator asociate unui cont si revocare acces la nivel de aplicatii individuale",
				"isCorrect": true
			},
			{ "str": "asigura integritatea si confidentialitatea datelor" },
			{ "str": "autentificarea utilizatorilor" }
		]
	},
	{
		"quest": "Care din urmatoarele implementari de baze de date NU este NoSQL?",
		"choices": [
			{ "str": "Cassandra" },
			{ "str": "DynamoDB" },
			{ "str": "MySQL", "isCorrect": true },
			{ "str": "MongoDB" }
		]
	},
	{
		"quest": "Care dintre cele de mai jos NU este o practica XP?",
		"choices": [
			{ "str": "planning game" },
			{ "str": "collective code ownership" },
			{ "str": "coding standard" },
			{ "str": "complex design", "isCorrect": true }
		]
	},
	{
		"quest": "Cum se numeste modul Android in care dispozitivul poate intra intr-o stare de somn adânc daca utilizatorii nu l-au folosit in mod activ pentru perioade mai indelungate de timp?",
		"choices": [
			{ "str": "Drowse" },
			{ "str": "Nap" },
			{ "str": "Sleep" },
			{ "str": "Doze", "isCorrect": true }
		]
	},
	{
		"quest": "Microserviciile sunt utile:",
		"choices": [
			{ "str": "pentru optiunea unei design compartimental al proiectului" },
			{ "str": "in medii distribuite" },
			{ "str": "pentru toate variantele enumerate", "isCorrect": true },
			{
				"str": "in cazul aplicatiilor monolitice care trebuie divizate in componente specializate"
			}
		]
	},
	{
		"quest": "Ce design pattern putem folosi pentru a converti interfata unei clase intr-o alta interfata conform asteptarilor clientilor?",
		"choices": [
			{ "str": "Proxy" },
			{ "str": "Adapter", "isCorrect": true },
			{ "str": "Facade" },
			{ "str": "Strategy" }
		]
	},
	{
		"quest": "Ce regula este bine sa adoptam in proiectarea modulelor?",
		"choices": [
			{ "str": "cuplare slaba, coeziune mare", "isCorrect": true },
			{ "str": "cuplare puternica, coeziune mare" },
			{ "str": "cuplare puternica, coeziune mica" },
			{ "str": "cuplare slaba, coeziune mica" }
		]
	},

	{
		"quest": "De ce se ocupa tiparele structurale?",
		"choices": [
			{
				"str": "relatiile dintre entitati, facand posibil lucrul impreuna al acestor entitati mai usor",
				"isCorrect": true
			},
			{ "str": "comunicarea dintre entitati" },
			{
				"str": "instantiere, devenind astfel mai usoara crearea obiectelor intr-o maniera profitabila pentru situatia curenta"
			},
			{ "str": "structuri de date si cod" }
		]
	}
]
